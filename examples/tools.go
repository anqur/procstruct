//+build tools

package main

import (
	"os"
	"reflect"

	"github.com/anqur/procstruct"
)

type Item struct {
	Name  string `json:"name" gorm:"column: name; not null; type: varchar(64)" validate:"required"`
	Price int32  `json:"price" gorm:"column: price; not null; type: int(10)" validate:"required"`
}

func main() {
	var jsonNames []interface{}
	for _, n := range procstruct.Of(Item{}).TagKeys("json") {
		jsonNames = append(jsonNames, n)
	}

	s := procstruct.
		File("main").
		Header("generated by tools. DO NOT EDIT!").
		Structs(
			procstruct.Struct("ItemSorting").
				Field(
					"Key",
					reflect.TypeOf(""),
					procstruct.Tag().Comma("json").
						Key("key"),
					procstruct.Tag().CommaEqSpace("validate").
						Key("required").
						Entry("oneof", jsonNames...),
				).
				Field(
					"Order",
					reflect.TypeOf(""),
					procstruct.Tag().Comma("json").
						Key("order"),
					procstruct.Tag().CommaEqSpace("validate").
						Key("required").
						Entry("oneof", "asc", "desc"),
				),
		)

	data := []byte(s.String())
	if err := os.WriteFile("model.go", data, 0644); err != nil {
		panic(err)
	}
}
